---
- name: helm status ipfs
  shell: "helm status decentralized-storage | grep STATUS: | awk  '{print $2}'"
  register: output

- set_fact:
    ipfs_started: "{{ output.stdout }}"

- name: install ipfs
  shell: "helm install stable/ipfs --name decentralized-storage"
  when: ipfs_started != "DEPLOYED"

- name: ready.w8 decentralized-storage-ipfs
  shell: "$(npm root -g)/transmute-cli/scripts/w8s/ready.w8 decentralized-storage-ipfs default"

# wait a bit longer for ipfs repo lock

- name: IPFS_POD_NAME
  shell: 'kubectl get pods --namespace default -l "app=ipfs,release=decentralized-storage" -o jsonpath="{.items[0].metadata.name}"'
  register: IPFS_POD_NAME

- name: ipfs config Addresses
  shell: "kubectl exec {{ IPFS_POD_NAME.stdout }} -- ipfs config Addresses.API /ip4/0.0.0.0/tcp/5001"
  retries: 5
  delay: 60
  register: result
  until: result.rc == 0

- name: ipfs config Access-Control-Allow-Origin
  shell: "kubectl exec {{ IPFS_POD_NAME.stdout }} -- ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '[\"*\"]'"

- name: ipfs config Access-Control-Allow-Methods
  shell: "kubectl exec {{ IPFS_POD_NAME.stdout }} -- ipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods '[\"PUT\", \"GET\", \"POST\"]'"

- name: delete pod {{ IPFS_POD_NAME.stdout }}
  shell: "kubectl delete pod {{ IPFS_POD_NAME.stdout }}"

- name: minikube_ip
  shell: "minikube ip"
  register: minikube_ip

- name: add ganache.transmute.minikube to /etc/hosts
  lineinfile:
    path: /etc/hosts
    line: '{{ minikube_ip.stdout }} ipfs.transmute.minikube'
  become: yes

- name: helm status ganache
  shell: "helm status ganache | grep STATUS: | awk  '{print $2}' | sed 's/DEPLOYED/yes/g'"
  register: output

- set_fact:
    ganache_started: "{{ output.stdout }}"

- name: helm status kong
  shell: "helm status gateway | grep STATUS: | awk  '{print $2}' | sed 's/DEPLOYED/yes/g'"
  register: output

- set_fact:
    kong_started: "{{ output.stdout }}"
