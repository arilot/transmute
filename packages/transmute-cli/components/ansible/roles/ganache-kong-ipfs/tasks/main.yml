---
- name: KONG_ADMIN_URL
  shell: "minikube service gateway-kong-admin --url | sed 's,http://,https://,g'"
  register: KONG_ADMIN_URL

- name: KONG_PROXY_URL
  shell: "minikube service gateway-kong-proxy --url"
  register: KONG_PROXY_URL

- name: KONG_PROXY_PORT
  shell: "kubectl get service gateway-kong-proxy -o json | jq -r '.spec.ports[0].nodePort'"
  register: KONG_PROXY_PORT

- name: KONG_HOST
  shell: "echo {{ KONG_ADMIN_URL.stdout }} | sed 's!https://!!g' | cut -f1 -d:"
  register: KONG_HOST

- name: KONG_PORT
  shell: "echo {{ KONG_ADMIN_URL.stdout }} | sed 's!https://!!g' | cut -f2 -d:"
  register: KONG_PORT

- name: sleep for 30 seconds and continue with play
  wait_for: timeout=30

- name: GANACHE_CLUSTER_IP
  shell: "kubectl get service ganache -o json | jq -r '.spec.clusterIP'"
  register: GANACHE_CLUSTER_IP

- name: "wait for kong to come up"
  uri:
    url: "https://{{ KONG_HOST.stdout }}:{{ KONG_PORT.stdout }}"
    status_code: 200
    validate_certs: no
  register: result
  retries: 60
  delay: 5

- name: Curl ganache cluster to kong
  uri:
    url: "{{ KONG_ADMIN_URL.stdout }}/apis/"
    method: POST
    body: "name=ganache&hosts=ganache.transmute.minikube&upstream_url=http://{{ GANACHE_CLUSTER_IP.stdout }}:8545/"
    status_code: 201
    validate_certs: no
  register: out

- debug: var=out

- name: sleep for 30 seconds and continue with play
  wait_for: timeout=30

- name: GANACHE HEALTHCHECK
  uri:
    url: "http://ganache.transmute.minikube:{{ KONG_PROXY_PORT.stdout }}"
    method: POST
    body: '{"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":68}'
    body_format: json
    status_code: 200
  register: out

- debug: var=out

- name: IPFS_CLUSTER_IP
  shell: "PATH=$HOME/.transmute/bin:$PATH kubectl get service decentralized-storage-ipfs -o json | jq -r '.spec.clusterIP'"
  register: IPFS_CLUSTER_IP

- name: Curl ganache cluster to kong
  uri:
    url: "{{ KONG_ADMIN_URL.stdout }}/apis/"
    method: POST
    body: "name=ipfs&hosts=ipfs.transmute.minikube&upstream_url=http://{{ IPFS_CLUSTER_IP }}:5001/"
    validate_certs: no
    status_code: 201
  register: out

- debug: var=out

- name: Curl ipfs to kong
  uri:
    url: "{{ KONG_ADMIN_URL.stdout }}/apis/ipfs/plugins"
    method: POST
    body: 'name=cors&config.origins=*&config.methods=GET, PUT, POST'
    status_code: 201
    validate_certs: no
  register: out

- debug: var=out

- name: Curl ipfs get api id
  uri:
    url: "http://ipfs.transmute.minikube:{{ KONG_PROXY_PORT.stdout }}/api/v0/id"
    method: GET
  register: out
  retries: 200
  delay: 1
  ignore_errors: yes

- debug: var=out

- name: TRANSMUTE_REPO
  shell: "npm root -g"
  register: TRANSMUTE_REPO

- name: FRAMEWORK_CONFIG
  template:
    src: framework.env.json.j2
    dest: "{{ TRANSMUTE_REPO.stdout }}/packages/transmute-framework/src/transmute-config/env.json"

- name: DASHBOARD_CONFIG
  template:
    src: dashboard.env.json.j2
    dest: "{{ TRANSMUTE_REPO.stdout }}/packages/transmute-dashboard/src/transmute-config/env.json"
